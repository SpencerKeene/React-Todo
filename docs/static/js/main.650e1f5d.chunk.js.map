{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","setFilter","setFilteredTodos","getLocalTodos","useCallback","localTodos","JSON","parse","localStorage","getItem","saveLocalTodos","setItem","stringify","filterHandler","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.650e1f5d.chunk.js","sourcesContent":["const Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onClick={statusHandler}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        return item.id === todo.id\r\n          ? { ...item, completed: !item.completed }\r\n          : item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            text={todo.text}\r\n            todo={todo}\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\n// Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Functions\n  const getLocalTodos = useCallback(() => {\n    let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    if (localTodos !== null) setTodos(localTodos);\n  }, []);\n\n  const saveLocalTodos = useCallback(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const filterHandler = useCallback(() => {\n    switch (filter) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => !todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  }, [filter, todos]);\n\n  // Effects\n  useEffect(() => getLocalTodos(), [getLocalTodos]);\n  useEffect(() => filterHandler(), [filterHandler]);\n  useEffect(() => saveLocalTodos(), [saveLocalTodos]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Spencer's Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setFilter}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}